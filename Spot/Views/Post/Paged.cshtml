@model Spot.Models.Generic.ViewModels.PagedViewModel<Spot.Models.Post.ViewModels.PostExcerptViewModel>

@{
    ViewBag.Title = "Posts";
}

<header id="header">
    <div class="mx-auto p-3 py-sm-5  text-light" style="max-width: 30rem;">
        <h6 class="text-uppercase m-0">Blog posts</h6>
        <h2 class="font-weight-normal mt-0">Welcome to Spot</h2>
        <p class="mb-0">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla ac porttitor quam, at rhoncus orci. Nulla facilisi. Pellentesque eu metus at magna aliquam blandit sed quis leo. Nam et tincidunt magna. Etiam vestibulum consequat tortor, et scelerisque eros pretium placerat. Aenean accumsan non ante sed aliquam.</p>
    </div>
</header>

<main id="main" class="container py-5">
    <div class="row justify-content-center">
        @foreach (var post in Model.Entities) {
            <div class="col-12 col-md-6 col-lg-4">
                <article class="card mb-3 mb-sm-4">
                    <header class="mt-5 pt-5 px-4">
                        <strong class="m-0 text-uppercase">@post.Category.Name</strong>
                        <h3 class="m-0 text-truncate" title="@post.Title">@post.Title</h3>
                    </header>
                    <section class="p-4">
                        <p class="m-0">@post.Excerpt</p>
                        <blockquote class="blockquote mt-3 mb-0">
                            <footer class="blockquote-footer">
                                <cite title="Source Title">By @post.Author</cite>
                            </footer>
                        </blockquote>
                    </section>
                    <footer class="px-4 pb-4">
                        <a href="@Url.Action("Single", "Post", new { id = post.Id })" class="btn btn-outline-primary btn-sm">Read more</a>

                        @if (User.IsInRole("Administrator") || User.IsInRole("Editor")) {
                            <a href="@Url.Action("Edit", "Post", new { id = post.Id })" class="btn btn-outline-secondary btn-sm">Edit</a>
                        }
                    </footer>
                </article>
            </div>
        }
    </div>

    <nav aria-label="Post pagination">
        <ul class="pagination justify-content-center">
            @if (Model.Previous) {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Paged", "Post", new { pageIndex = Model.Index - 1 })">Previous</a>
                </li>
            }
            else {
                <li class="page-item disabled">
                    <a class="page-link" href="@Url.Action("Paged", "Post", new { pageIndex = Model.Index - 1 })" tabindex="-1">Previous</a>
                </li>
            }

            @for (var i = 1; i <= Model.Pages; ++i) {

                if (i == Model.Index) {
                    <li class="page-item active">
                        <a class="page-link" href="@Url.Action("Paged", "Post", new { pageIndex = i })">@i <span class="sr-only">(current)</span></a>
                    </li>
                }
                else {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Paged", "Post", new { pageIndex = i })">@i</a>
                    </li>
                }
            }

            @if (Model.Next) {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Paged", "Post", new { pageIndex = Model.Index + 1 })">Next</a>
                </li>
            }
            else {
                <li class="page-item disabled">
                    <a class="page-link" href="@Url.Action("Paged", "Post", new { pageIndex = Model.Index + 1 })" tabindex="-1">Next</a>
                </li>
            }
        </ul>
    </nav>
</main>