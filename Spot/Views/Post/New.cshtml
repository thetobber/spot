@model Spot.Models.Post.ViewModels.PostNewViewModel

@{
    ViewBag.Title = "New";
    MvcHtmlString error;
}

<main class="container">
    <form action="@Url.Action("New", "Post")" method="post" autocomplete="off">
        @Html.AntiForgeryToken()

        <div class="form-group">
            @Html.LabelFor(m => m.Status)
            @{
                error = Html.ValidationMessageFor(m => m.Status);

                if (MvcHtmlString.IsNullOrEmpty(error)) {
                    @Html.EnumDropDownListFor(m => m.Status, null, new { @class = "form-control" });
                }
                else {
                    @Html.EnumDropDownListFor(m => m.Status, "Select post status", new { @class = "form-control is-invalid" });
                    <div class="invalid-feedback">@error</div>
                }
            }
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Title)
            @{
                error = Html.ValidationMessageFor(m => m.Title);

                if (MvcHtmlString.IsNullOrEmpty(error)) {
                    @Html.TextBoxFor(m => m.Title, new { @class = "form-control" });
                }
                else {
                    @Html.TextAreaFor(m => m.Title, new { @class = "form-control is-invalid" });
                    <div class="invalid-feedback">@error</div>
                }
            }
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Excerpt)
            @{
                error = Html.ValidationMessageFor(m => m.Excerpt);

                if (MvcHtmlString.IsNullOrEmpty(error)) {
                    @Html.TextAreaFor(m => m.Excerpt, new { @class = "form-control" });
                }
                else {
                    @Html.TextAreaFor(m => m.Excerpt, new { @class = "form-control is-invalid" });
                    <div class="invalid-feedback">@error</div>
                }
            }
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Content)
            @{
                error = Html.ValidationMessageFor(m => m.Content);

                if (MvcHtmlString.IsNullOrEmpty(error)) {
                    @Html.TextAreaFor(m => m.Content, new { @class = "form-control" });
                }
                else {
                    @Html.TextAreaFor(m => m.Content, new { @class = "form-control is-invalid" });
                    <div class="invalid-feedback">@error</div>
                }
            }
        </div>

        <button class="btn btn-success btn-block" type="submit">Add new post</button>
    </form>
</main>